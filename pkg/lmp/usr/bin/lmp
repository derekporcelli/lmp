#!/usr/bin/env python3

import os
import subprocess
import configparser

CONFIG_PATH = '/etc/lmp/lmp.conf'
MEDIA_PATH = ''
MEDIA_PLAYER = ''
START_MESSAGE = 'Select a file or directory to play'

def get_config():
    global MEDIA_PATH
    global MEDIA_PLAYER
    config = configparser.ConfigParser()
    config.read(CONFIG_PATH)
    MEDIA_PATH = os.path.expandvars(config.get('general', 'media_path'))
    MEDIA_PLAYER = config.get('general', 'media_player')

# Recursive cli selection
def select_media(path, message=None):
    global MEDIA_PATH
    global MEDIA_PLAYER
    subprocess.run(['clear'])
    previous_path = '/'.join(path.split('/')[:-1])
    if message:
        print(message)
    if os.path.isfile(path):
        print('\033[94m' + 'Playing media...' + '\033[0m')
        media = subprocess.Popen([MEDIA_PLAYER, path], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        path = previous_path
        previous_path = '/'.join(path.split('/')[:-1])
        subprocess.run(['clear'])
        print(START_MESSAGE)
    list_dir = os.listdir(path)
    list_dir.sort()
    for i, file in enumerate(list_dir):
        print('\033[92m' + f'{i+1}' + '.' + '\033[0m' + f'\t{file}')
    if path != MEDIA_PATH:
        print('\033[92m' + '0.' + '\033[0m' + '\tGo back')
    else:
        print('\033[92m' + '0.' + '\033[0m' +'\tExit')
    symbol_path = path.replace(MEDIA_PATH, ':-)')
    try:
        choice = int(input(f'\033[95m[{symbol_path}] > \033[0m'))
    except ValueError:
        select_media(path, '\033[93m' + 'Invalid input, try again' + '\033[0m')
        return
    except KeyboardInterrupt:
        return
    if choice == 0 and path != MEDIA_PATH:
        select_media(previous_path)
    elif choice == 0:
        return
    elif len(list_dir)+1 > choice:
        select_media(f'{path}/{list_dir[choice-1]}')
    else:
        select_media(path, '\033[91m' + 'Invalid selection, try again' + '\033[0m')

def main():
    global MEDIA_PATH
    get_config()
    select_media(MEDIA_PATH, START_MESSAGE)

if __name__ == '__main__':
    main()
